<?php
/**
 * Created by PhpStorm.
 * User: Admini
 * Date: 2018/10/30
 * Time: 9:22
 * 城市控制器
 * 肖亚子
 */
namespace app\api\controller;
use app\api\model\AreaModel;

class AreaController extends ApiBaseController{

    /**
     * @throws \think\db\exception\DataNotFoundException
     * @throws \think\db\exception\ModelNotFoundException
     * @throws \think\exception\DbException
     * 获取平台开通城市数据
     * 肖亚子
     */
    public function AreaOpenUp(){
        $Type      = input("post.type",1);
        $Condition = array();

        if ($Type == 1){
            $Condition[] = array("exp","(status = 1 and (leveltype = 1 or leveltype = 2)) or (leveltype = 3 and pjstatus = 1)");
        }else{
            $Condition[] = array("exp","(status = 1 and (leveltype = 1 or leveltype = 2)) or leveltype = 3");
        }

        $List = AreaModel::AreaList($Condition);
        $List = $this->AreaWordbook($List,2);

        if ($Type == 1){
            $Condition["type"] = array("eq",1);
            $Popular = AreaModel::AreaList($Condition);
            $Popular = $this->AreaWordbook($Popular,2);

            $Data["popular"] = $Popular;
        }

        $Data["list"] = $List;

        $this->returnApiData('获取成功',200,$Data);
    }

    /**
     * @throws \think\db\exception\DataNotFoundException
     * @throws \think\db\exception\ModelNotFoundException
     * @throws \think\exception\DbException
     * 获取全部城市数据
     * 肖亚子
     */
    public function CityDictionary(){
        $Condition = array();
        $List      = AreaModel::AreaList($Condition);
        $List      = $this->AreaWordbook($List);

        $this->returnApiData('获取成功',200,$List);
    }

    /**
     * @param $List  城市数据
     * @param int $Type 1获取全部三级城市 2获取二级开通城市
     * @return array
     * 城市数据进行转换组合
     * 肖亚子
     */

    private function AreaWordbook($List,$Type = 1){
        $Province = array();
        $City     = array();
        $Area     = array();
        $AreaList = array();

        foreach ($List as $Key => $Val) {
            if($Val["leveltype"] == 1){
                $Province[] = $Val;
            }elseif ($Val["leveltype"] == 2){
                $City[] =  $Val;
            }elseif ($Val["leveltype"] == 3){
                $Area[] = $Val;
            }
        }

        foreach ($Province as $Key => $Val){
            $Subscript = 0;
            $Addto     = 0;

            if ($Val["areacode"] != 900000){
                $AreaList[$Key]["value"] = $Val["areacode"];
                $AreaList[$Key]["text"]  = $Val["name"];
                $AreaList[$Key]["letter"] = strtoupper(substr( $Val["quanpin"], 0, 1 ));
                foreach ($City as $K => $V){

                    if($Val["areacode"] == $V["parentid"]){
                        $Mark      = $Subscript;
                        $Subscript = $Subscript + 1;

                        $AreaList[$Key]["children"][] = array("value"=>$V["areacode"],"provincecode"=>$Val["areacode"],"text"=>$V["name"],"letter"=>strtoupper(substr( $V["quanpin"], 0, 1 )));
                        if ($Area){
                            foreach ($Area as $A => $S){
                                if($V["areacode"] == $S["parentid"]){
                                    if ($Type == 1 || ($Type == 2 && $S["pjstatus"] == 0)){
                                        $AreaList[$Key]['children'][$Mark]["children"][]= array("value"=>$S["areacode"],"text"=>$S["name"],"letter"=>strtoupper(substr( $S["quanpin"], 0, 1 )));
                                    }else{
                                        $Addto = $Subscript + 1;
                                        $AreaList[$Key]["children"][] = array("value"=>$S["areacode"],"provincecode"=>$Val["areacode"],"citycode"=>$V["areacode"],"text"=>$S["name"],"letter"=>strtoupper(substr( $S["quanpin"], 0, 1 )));
                                        $Subscript = $Addto;
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }

        return $AreaList;
    }
}