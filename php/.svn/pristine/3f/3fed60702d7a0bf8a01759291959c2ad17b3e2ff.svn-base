<?php

namespace app\system\controller;

use app\common\AdminBaseController;
use think\Request;
use think\Db;
use think\Session;
use app\common\RegExpression;
use app\common\Md5Help;
use app\common\SysHelp;
use app\system\model\AdminModel;
use app\system\model\ContentModel;

use app\system\model\UserModel;

/**
 * 会员管理
 * Enter description here ...
 * @author Administrator
 *
 */
class UserController extends AdminBaseController {

    /**
     * 会员列表
     * Enter description here ...
     */
    public function UserList() {
        //设置添加信息按钮
        //$this->assign('addbtn', $this->returnAddbtn('添加会员', 'system/member/add', 2));

        //类型
       // $parents = Db::name('categories')->where('parent_id = 2')->order('sort asc')->select();
       // $this->assign('parents', $parents);

        $Condition = array();
        $Psize     = $this->get('page', 1);
//        //获取参数

//        $kws = $this->get('kws', '');
//        $starttime = $this->get('starttime', '');
//        $endtime = $this->get('endtime', '');
//        //组合where
//        if ($kws != '') {
//            $where['nickname'] = array('like', '%' . $kws . '%');
//            $this->assign('kws', $kws);
//        }
//        if ($starttime != '') {
//            $where['addtime'] = array('egt', $starttime);
//            $this->assign('starttime', $starttime);
//        }
//        if ($endtime != '') {
//            $where['addtime'] = array('elt', $endtime);
//            $this->assign('endtime', $endtime);
//        }
//        //获取分页列表数据
//        $mm = new MemberModel();
//        $data = $mm->getUserList($where, $pn);

      //  $this->assign('data', $data);
        $Data =   UserModel::UserList($Condition,$Psize,50);
        $this->assign("data",$Data);
        return $this->display('user/index', true);
    }

    /**
     * 删除账号
     * Enter description here ...
     */
    public function delete() {


        $id = Request::instance()->param('id', 0);

        $idstr = Request::instance()->post('idstr', '');

        if ($id > 0) {
            $obj = Db::name('member')->where('id', $id)->find();
            $this->log('删除会员：' . $obj['nickname']);
            $res = Db::name('member')->delete($id);
        } else {
            //批量删除
            $idarray = explode(',', $idstr);
            foreach ($idarray as $k => $v) {
                if (!(empty($v))) {
                    $obj = Db::name('member')->where('id', $v)->find();
                    $this->log('删除会员：' . $obj['nickname']);
                    $res = Db::name('member')->delete($v);
                }
            }
        }
        $this->toError("删除失败");

        $this->toSuccess('删除成功');
    }

}
