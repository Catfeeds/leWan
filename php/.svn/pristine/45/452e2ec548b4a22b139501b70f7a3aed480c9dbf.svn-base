<?php
namespace app\system\controller;

use app\api\controller\UploadController;
use app\common\AdminBaseController;
use app\common\model\Levelconst;
use think\Request;
use think\Db;
use think\Config;
use think\Session;
use app\system\model\NodesModel;

/**
 * 专门处理ajax请求
 * Enter description here ...
 * @author Administrator
 *
 */
class AjaxController extends AdminBaseController
{

    /**
     * 单图片上传
     * Enter description here ...
     */
    public function uploadSingleImage(){
        $file = $_FILES['img'];
        if ($file) {
            $name = $file['name'];
            $format = strrchr($name, '.');//截取文件后缀名如 (.jpg)
            /*判断图片格式*/
            $allow_type = ['.jpg', '.jpeg', '.gif', '.bmp', '.png'];
            if (! in_array($format, $allow_type)) {
                return $this->ajaxReturn( '文件格式不在允许范围内哦', 400);
            }
            $host =  $_SERVER['HTTP_HOST']?$_SERVER['HTTP_HOST']: $_SERVER['SERVER_NAME'];
            $url =  $host.'/api/upload/upPicToOss/';
            $data['fileName'] = 'uploads/' . date("Ymd") . '/' . sha1( $file['tmp_name'].time().uniqid() ) . $format;
            $data['filepath'] = $file['tmp_name'];
            $rs = curlPost($url,$data);
            if(json_decode($rs,true)->code == 200||json_decode($rs,true)['code'] == 200){
                $arr = [
                    'url' => json_decode($rs)->data->url?json_decode($rs)->data->url:json_decode($rs)['data']['url'],  //上传资源地址
                ];
                $this->addUploadRecord($arr['url']);
                //将结果返回
                return $this->ajaxReturn( '成功上传到oss', 200, $arr);
            }else{
                return $this->ajaxReturn("上传失败", 400);
            }
        }
        return $this->ajaxReturn("文件不存在", 400);
    }

    /**
     * 64位图片上传地址
     * Enter description here ...
     */
    public function upload64Image(){
        $base64_img = Request::instance()->post('img');
        $folder = date('Ymd');
        $up_dir = ROOT_PATH .'' . DS .'uploads'.DS. $folder.DS;//存放在当前目录的upload文件夹下
        if(!file_exists($up_dir)){
            mkdir($up_dir,0777);
        }
        if(preg_match('/^(data:\s*image\/(\w+);base64,)/', $base64_img, $result)){
            $type = $result[2];
            if(in_array($type,array('pjpeg','jpeg','jpg','gif','bmp','png'))){
                $new_file_name = date('YmdHis_').'.'.$type;
                $new_file = $up_dir.$new_file_name;
                if(file_put_contents($new_file, base64_decode(str_replace($result[1], '', $base64_img)))){

                    $host =  $_SERVER['HTTP_HOST']?$_SERVER['HTTP_HOST']: $_SERVER['SERVER_NAME'];
                    $url =  $host.'/api/upload/upPicToOss/';

                    $data['fileName'] =  'uploads/' . $folder . '/' .$new_file_name;
                    $data['filepath'] =$new_file;
                    $rs = curlPost($url,$data);
                    $newRs =  json_decode($rs,true);
                    if(is_array($newRs) && $newRs['code']==200){
                        $arr = [
                            'url' => json_decode($rs)['data']['url'],  //上传资源地址
                        ];
                        $this->addUploadRecord($arr['url']);
                        unlink($new_file);
                        //将结果返回
                        return $this->ajaxReturn( '成功上传到oss', 200, $arr);
                    }else if(is_object($newRs) && $newRs->code == 200){
                        $arr = [
                            'url' => json_decode($rs)->data->url,  //上传资源地址
                        ];
                        $this->addUploadRecord($arr['url']);
                        unlink($new_file);
                        //将结果返回
                        return $this->ajaxReturn( '成功上传到oss', 200, $arr);
                    }else{
                        return $this->ajaxReturn("上传失败", 400);
                    }
                }else{
                    return $this->ajaxReturn('图片上传类型错误',400);
                }
            }else{
                return $this->ajaxReturn('文件错误',400);
            }
        }
    }


    /**
     * 添加上传文件记录
     * 记录到表中，等保存实体的时候，删除对应的记录，方便以后根据这个记录表删除无效的图片
     * @param $filename
     */
    private function addUploadRecord($filename){
        $count =Db::name('sys_temp_uploadimages')->where(array('fileurl'=>$filename))->count();
        if($count<1){
            $data['fileurl'] = $filename;
            $data['addtime'] = time();
            Db::name('sys_temp_uploadimages')->insert($data);
        }
    }


    /**
     * 删除图片
     * Enter description here ...
     */
    public function deleteimg(){
        $filename = Request::instance()->post('filename');
        //文件地址
        $file = ROOT_PATH .'public' . DS . 'uploads' . DS . $filename;
        if(file_exists($file)){
            @unlink($file);
        }
        Db::name('sys_temp_uploadimages')->where('fileurl', $filename)->delete();
        return $this->ajaxReturn('success', 1);
    }


    /**
     * 点击顶部导航，获取二级菜单
     */
    public function clickGroup(){
        $group_id = $this->post('group_id', 0);
        $nm = new NodesModel();
        $group_menus = $nm->secondMenu($group_id);
        $menu = $group_menus[0];
        //记录grouop_id
        Session::set('admin.groupid', $menu['group_id']);
        return $this->ajaxReturn('ok', 1, $menu['url']);
    }


    public function togglemenu(){
        $status = $this->post('status', 0);
        Session::set('admin.hidemenu', $status);
        return $this->ajaxReturn('ok', 1);
    }


    /**
     * 加载城市
     */
    public function loadcity(){
        $pcode = $this->post('pcode', '0');
        $status = $this->post('status', '0');
        if($status > 0){
            $map['status'] = $status;
        }
        $map['parentid'] = $pcode;
        $list = Db::name('region')->field('`name` as city, id as `code`')->where($map)->order('id asc')->select();
        return $this->ajaxReturn('ok', 1, $list);
    }

    public function loadarea(){
        $ccode  = $this->post('ccode', '0');
        $status = $this->post('status', '0');
//        if($status > 0){
//            $map['status'] = $status;
//        }
        $map['parentid'] = $ccode;
        $list = Db::name('region')->field('`name` as area, id as `code`')->where($map)->order('id asc')->select();
        return $this->ajaxReturn('ok', 1, $list);
    }


    public function loadMerchant(){
        $key = $this->post('key', '');
        if($key != ''){
            $where['merchant_contact|merchant_contactmobile|merchant_name'] = ['like', '%'.$key.'%'];
            $where['parent_id'] = 0;
            $list = Db::name('merchant')->field('merchant_id, merchant_name,loginname,merchant_contactmobile, merchant_contact')->where($where)->limit(10)->select();
            return $this->ajaxReturn('ok', 1, $list);
        }
        return $this->ajaxReturn('ok', 1, []);
    }


    public function loadUser(){
        $key = $this->post('key', '');
        if($key != ''){
            $where['u.purchasetag'] = 1; //采购员
            $where['u.mobile|u.nickname|a.truename'] = ['like', '%'.$key.'%'];
            $list = Db::name('user u')->field('u.user_id, u.mobile, a.truename, u.nickname')
                ->join('jay_user_auth a', 'a.user_id = u.user_id', 'left')
                ->where($where)->limit(10)->select();
            return $this->ajaxReturn('ok', 1, $list);
        }
        return $this->ajaxReturn('ok', 1, []);
    }

    /**
     * 获取分销商会员
     */
    public function loadOrdinaryUser(){
        $key = $this->post('key', '');
        if($key != ''){
            $where['mobile'] = ['like', '%'.$key.'%'];
            $where['distributor'] = 1;
            $list = Db::name('user')->field('user_id,mobile,nickname')->where($where)->limit(10)->select();
            return $this->ajaxReturn('ok', 1, $list);
        }
        return $this->ajaxReturn('ok', 1, []);
    }

    /**
     * 查询商品
     */
    public function loadProduct(){
        $key = $this->post('key', '');
        if($key != ''){
            $where['product_id|product_name'] = ['like', '%'.$key.'%'];
//            $where['product_status'] = 1; //上架
//            $where['product_reviewstatus'] = 1;//审核通过
//            $where['product_del'] = array('neq',1);//未删除
//            $where['sold_out'] = array('neq',1);//未售罄

            $list = Db::name('product')->field('product_id,product_name')->where($where)->limit(10)->select();
            return $this->ajaxReturn('ok', 1, $list);
        }
        return $this->ajaxReturn('ok', 1, []);
    }

    /**
     * 查询商品价格
     */
    public function loadProductPrice(){
        $key = $this->post('pid', 0);
        if($key != ''){
            $where['product_id'] = $key;
            $where['price_status'] = 1;
            $list = Db::name('product_price')->field('price_id,product_property,price_sale')->where($where)->select();
            return $this->ajaxReturn('ok', 1, $list);
        }
        return $this->ajaxReturn('ok', 1, []);
    }

    /**
     * 加载城市
     */
    public function getUserFriends(){
        $uid = $this->post('uid');
        $condition["reid"] = array("eq",$uid);
        $list = Db::name("user")->where($condition)->select();
        foreach ($list as $k=>$v){
            $list[$k]['level'] = Levelconst::getName($v['level']);
        }
        return $this->ajaxReturn('ok', 1, $list);
    }

}
