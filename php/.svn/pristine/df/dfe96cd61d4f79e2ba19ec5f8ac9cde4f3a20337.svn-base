<?php
/**
 * Created by PhpStorm.
 * User: Admini
 * Date: 2018/10/30
 * Time: 16:40
 * 接口商品控制器
 * 肖亚子
 */
namespace app\api\controller;
use app\api\model\ProductModel;
use app\api\model\UserModel;
use app\api\model\CommissionModel;
use think\Config;
use Think\Exception;
use think\Url;
use think\Request;
use think\Db;

class ProductController extends ApiBaseController{

    /**
     * 获取商品列表
     * 肖亚子
     */
    public function ProductList(){
        try {
            $Condition = array();
            $ProCode   = intval($this->headerData["provincecode"]);//省code
            $CityCode  = intval($this->headerData["citycode"]);//城市code
            $Token     = input("post.token","","htmlspecialchars,strip_tags");
            $Bursting  = intval(input("post.bursting"));//爆款商品
            $Type      = intval(input("post.type"));//1未定位 2已定位
            $Psize     = intval(input("post.paging",1));//分页默认第一页
            $Paged     = intval(input("post.paged",10));//分页条数默认10条
            $Title     = input("post.title","","htmlspecialchars,strip_tags");//搜索条件
            $Cateids   = intval(input("post.cateid"));//商品分类
            $Sales     = intval(input("post.sales"));//销售量 0取消 1降序 2升序
            $Price     = intval(input("post.price"));//价格   0取消 1降序 2升序
//            $Distance  = intval(input("post.distance"));//距离 0取消距离 1离我最近
            $Lat       = input("post.lat");//用户纬度
            $Lng       = input("post.lng");//用户经度

            if ($Token){
                $Punfu = new PubfunController();
                $Punfu->UserLoginStatus($Token,$this->headerData);//用户判断
            }

            if (!array($Type,array(1,2))){
                $this->returnApiData('获取失败', 400);
            }

            if($Type == 2 || ($Type == 1 && $Cateids && $Cateids != 4) || $Bursting == 1){
                parent::Tpl_Empty($ProCode,"请选择城市",2);
                parent::Tpl_Empty($CityCode,"请选择城市",2);
                parent::Tpl_Empty($Lat,"请在手机设置里开启位置",2);
                parent::Tpl_Empty($Lng,"请在手机设置里开启位置",2);
            }

            if ($Type == 2 || $Bursting == 1){
                $Condition[] = array("exp", "(m.merchant_pcode = {$ProCode} and m.merchant_ccode = {$CityCode}) or  m.merchant_pcode = {$ProCode}");
            }else{
                $Condition[] = ["exp","FIND_IN_SET(4,p.product_cateids)"];
            }

            $Condition["r.status"]               = array("eq", 1);
            $Condition["p.product_reviewstatus"] = array("eq", 2);
            $Condition["p.product_status"]       = array("eq", 1);
            $Condition["p.product_del"]          = array("eq", 0);

            if ($Bursting == 1){
                $Condition["p.product_explosion"] = array("eq", 1);
            }

            if ($Type == 2 || $Bursting == 1){
                $Field = ",convert((round(6367000 * 2 * asin(sqrt(pow(sin(((m.merchant_lat * pi()) / 180 - ({$Lat} * pi()) / 180) / 2), 2) + cos(({$Lat} * pi()) / 180) * cos((m.merchant_lat * pi()) / 180) * pow(sin(((m.merchant_lng * pi()) / 180 - ({$Lng} * pi()) / 180) / 2), 2)))))/1000,decimal(12,2)) AS distance";
                if (!$Sales && !$Price){
                    $Order = "distance asc,p.product_toplevel desc,p.product_addtime desc";
                }
            }else{
                $Field = "";
                if (!$Sales && !$Price){
                    $Order = "p.product_toplevel desc,p.product_addtime desc";
                }
            }

            if ($Cateids){
                if ($Cateids == 1){
                    $Condition[]=["exp","FIND_IN_SET({$Cateids},p.product_cateids) or p.product_returnall =1 "];
                }else{
                    $Condition[]=["exp","FIND_IN_SET({$Cateids},p.product_cateids)"];
                }
            }
            if ($Title){
                $Condition["p.product_name"] = array("LIKE", "%$Title%");
            }

            if ($Sales) {
                if ($Sales == 1) {
                    $Order .= "p.product_sold desc";
                } elseif ($Sales == 2) {
                    $Order .= "p.product_sold asc";
                }
            }
            if ($Price) {
                if ($Price == 1) {
                    if ($Sales){
                        $Order .= ",p.temp_price desc";
                    }else{
                        $Order .= "p.temp_price desc";
                    }
                } elseif ($Price == 2) {
                    if ($Sales){
                        $Order .= ",p.temp_price asc";
                    }else{
                        $Order .= "p.temp_price asc";
                    }
                }
            }

            if ($Token){
                $User  = UserModel::UserFinds($Token);
            }

            $List      = ProductModel::ShopProductList($Condition,$Field, $Order, $Psize,$Paged);
            $Parameter = UserModel::UserParameterList();

            foreach ($List as $Key => $Val) {

                if ($Val["product_pic"]) {
                    $List[$Key]["product_pic"] = getFullPicPath( $Val["product_pic"]);
                }

                if ($Val["product_compic"]){
                    $Compic    = explode(",",$Val["product_compic"]);
                    $CompicArr = array();
                    foreach ($Compic as $K => $V){
                        if ($V){
                            $CompicArr[] = getFullPicPath($V);
                        }
                    }
                    $List[$Key]["product_compic"] = $CompicArr;
                }

                if ($Token){
                    $List[$Key]["temp_commission"] = CommissionModel::getRewardByUser($Val["temp_commission"],$User["level"],$Parameter);
                }else{
                    $List[$Key]["temp_commission"] = array();
                }

                if ($Val["product_timelimit"] == 1){
                    if (parent::Tpl_Time($Val["product_endtime"],5,2) < time()){
                        unset($List[$Key]);
                    }
                }
                $List[$Key]["now_time"] =  time();
            }

            $this->returnApiData('获取成功', 200, $List);
        }catch (Exception $e) {
            parent::Tpl_Abnormal($e->getMessage());  //数据库异常抛出
        }
    }

    /**
     * 获取商品详情
     * 肖亚子
     */
    public function ProductDetails(){
        try{
            $Data      = array();
            $HotPush   = array();
            $Condition = array();
            $Token     = input("post.token","","htmlspecialchars,strip_tags");
            $ProCode   = intval($this->headerData["provincecode"]);//省code
            $CityCode  = intval($this->headerData["citycode"]);//城市code
            $Type      = intval(input("post.type"));//1未定位 2已定位
            $Prid      = intval(input("post.pr_id"));//商品id
            $Lat       = input("post.lat");//用户纬度
            $Lng       = input("post.lng");//用户经度

            if ($Token){
                $Punfu = new PubfunController();
                $Punfu->UserLoginStatus($Token,$this->headerData);//用户判断
            }

            if (!in_array($Type,array(1,2))){
                $this->returnApiData("获取失败", 400);
            }
            if ($Type == 2){
                parent::Tpl_Empty($ProCode,"请选择城市",2);
                parent::Tpl_Empty($CityCode,"请选择城市",2);
                parent::Tpl_Empty($Lat,"请开启定位",2);
                parent::Tpl_Empty($Lng,"请开启定位",2);
            }

            parent::Tpl_Empty($Prid,"获取失败",2);

            if ($Type == 2){
                $Condition[]  = array("exp", "m.merchant_pcode = {$ProCode} and m.merchant_ccode = {$CityCode}");
            }else{
                $Condition[] = array("exp","FIND_IN_SET(4,p.product_cateids)");
            }

            $Condition["p.product_id"]           = array("eq", $Prid);
            $Condition["p.product_reviewstatus"] = array("eq", 2);
            $Condition["p.product_del"]          = array("eq", 0);
            $Condition["r.status"]               = array("eq", 1);

            $DataFind = ProductModel::ShopProductData($Condition);

            if ($DataFind){
                $Cateids = explode(",",$DataFind["product_cateids"]);

                if ($Type == 1 && !in_array(4,$Cateids)){//未定位查看的商品不是礼品商品
                    $this->returnApiData('请开启定位', 400);
                }

                unset($DataFind["product_cateids"]);

                if ($DataFind["product_tags"]){
                    $DataFind["product_tags"] = ProductModel::ShopTags(array("tag_id"=>array("in",$DataFind["product_tags"])));
                }

                if ($DataFind["product_carousel"]){
                    $Carousel = explode(",",$DataFind["product_carousel"]);

                    foreach ($Carousel as $Key => $Val){
                        $Carousel[$Key] = config::get('picture').$Val;
                    }
                    $DataFind["product_carousel"] = $Carousel;
                }else{
                    $DataFind["product_carousel"] = array();
                }

                $DataFind["product_poster"] = getFullPicPath($DataFind["product_poster"]);

                $Data["details"]  = $DataFind;

                $User      = UserModel::UserFinds($Token);
                $Parameter = UserModel::UserParameterList();

                if ($DataFind["product_isexpress"] == 1 && $DataFind["product_reservation"] == 2){//判断商品是不是到店免预约
                    //到店选日历一期暂不做
                    $PriceCondition["product_id"]   = array("eq",$DataFind["product_id"]);
                    $PriceCondition["price_status"] = array("eq",1);

                    $PriceList = ProductModel::ShopProductPrice($PriceCondition);//获取商品规格

                    if ($Token){
                        $Data["price"] = self::ProduCommission($PriceList,$User["level"],$Parameter);
                    }else{
                        $Data["price"] = [];
                    }
                }else{
                    //到店预约商品,快递商品,获取规格价格
                    $PriceCondition["product_id"]   = array("eq",$DataFind["product_id"]);
                    $PriceCondition["price_status"] = array("eq",1);

                    $PriceList = ProductModel::ShopProductPrice($PriceCondition);//获取商品规格

                    if ($Token){
                        $Data["price"] = self::ProduCommission($PriceList,$User["level"],$Parameter);
                    }else{
                        $Data["price"] = [];
                    }

                }

                //获取热推商品
                if ($Type == 2){//已定位位置查询
                    $Order = "distance asc";
                    $Field = "p.product_id,p.product_pic,p.product_name,p.temp_price,p.temp_commission,m.merchant_name,r.name as region";

                    $Field .= ",(round(6367000 * 2 * asin(sqrt(pow(sin(((m.merchant_lat * pi()) / 180 - ({$Lat} * pi()) / 180) / 2), 2) + cos(({$Lat} * pi()) / 180) * cos((m.merchant_lat * pi()) / 180) * pow(sin(((m.merchant_lng * pi()) / 180 - ({$Lng} * pi()) / 180) / 2), 2))))) AS distance";

                    $PushCondition[]  = array("exp", "m.merchant_pcode = {$ProCode} and m.merchant_ccode = {$CityCode}");
                }else{//未定位礼包商品查询
                    $PushCondition[] = array("exp","FIND_IN_SET(4,p.product_cateids)");
                    $Order = "p.product_toplevel desc,p.product_sales_volume desc,p.product_addtime desc";
                    $Field = "p.product_id,p.product_pic,p.product_name,p.temp_price,p.temp_commission,m.merchant_name,r.name as region";
                }

                $PushCondition["p.product_id"]           = array("neq", $Prid);
                $PushCondition["p.product_reviewstatus"] = array("eq", 2);
                $PushCondition["p.product_status"]       = array("eq", 1);
                $PushCondition["p.product_del"]          = array("eq", 0);
                $HotPushList  = ProductModel::ShopProductList($PushCondition,$Field, $Order, 1,8,true);//获取推荐商品

                foreach ($HotPushList as $Key => $Val){
                    $HotPush[$Key]["product_id"]  = $Val["product_id"];
                    if ($Val["product_pic"]){
                        $HotPushList[$Key]["product_pic"] =  getFullPicPath($Val["product_pic"]);
                    }else{
                        $HotPushList[$Key]["product_pic"] = "";
                    }

                    $HotPush[$Key]["product_name"]= $Val["product_name"];

                    if ($Token){
                        $HotPushList[$Key]["temp_commission"] = CommissionModel::getRewardByUser($Val["temp_commission"],$User["level"],$Parameter);
                    }else{
                        $HotPushList[$Key]["temp_commission"] = [];
                    }
                }
                $Data["hotpush"] = $HotPushList;//商品详情追加热推商品
            }else{
                $this->returnApiData('商品已下架', 400);
            }

            $this->returnApiData('获取成功', 200, $Data);
        }catch (Exception $e){
            parent::Tpl_Abnormal($e->getMessage());  //数据库异常抛出
        }

    }

    /**
     * @throws Exception
     * @throws \think\db\exception\DataNotFoundException
     * @throws \think\db\exception\ModelNotFoundException
     * @throws \think\exception\DbException
     * @throws \think\exception\PDOException
     * 用户海报分享商品
     * 肖亚子
     */
    public function ProductShare(){
        try{
            $Token  = input("post.token","","htmlspecialchars,strip_tags");
            $Prid   = intval(input("post.pr_id"));//商品id
            $Url    = input("post.url","","htmlspecialchars,strip_tags");//商品id

            $Punfu = new PubfunController();
            $Punfu->UserLoginStatus($Token,$this->headerData);//用户判断

            parent::Tpl_Empty($Prid,"获取失败",2);
            parent::Tpl_Empty($Url,"获取失败",2);

            $User   = UserModel::UserFinds($Token);
            $Poster = ProductModel::ShopProductPoster($Prid);

            if ($Poster){
                $Data["url"]    = $Url."?productId={$Prid}&recode={$User['recode']}";
                $Data["poster"] = getFullPicPath($Poster);

                if ($User["recode"]){
                    $Data["Picturename"] = $User["recode"];
                }else{
                    $Data["Picturename"] = $Token;
                }

                $Invitation = QrCode($Data,3);//生成分享海报

                $this->returnApiData('获取成功', 200, array("url"=>$Invitation));
            }else{
                $this->returnApiData('获取失败', 400);
            }

        }catch (Exception $e){
            parent::Tpl_Abnormal($e->getMessage());  //数据库异常抛出
        }
    }

    /**
     * @param $List      数据列表
     * @param $Level     用户等级
     * @param $Parameter 佣金配置
     * @return mixed
     * 根据用户等级转换商品佣金
     * 肖亚子
     */
    private function ProduCommission($List,$Level,$Parameter){

        foreach ($List as $Key=>$Val){
            $List[$Key]["price_commission"] = CommissionModel::getRewardByUser($Val["price_commission"],$Level,$Parameter);
        }

        return $List;
    }

    /*
 * 计算经纬度范围
 * $lat 纬度
 * $lon 经度
 * $raidus 半径(米)
 */
    /**
     * @param $Lat     用户纬度
     * @param $Lon     用户经度
     * @param $Raidus  用户距离范围
     * @return array
     * 根据用户经纬度以及距离范围计算周边经纬度
     * 肖亚子
     */
    private function getAround($Lat, $Lon, $Raidus) {

        //    $Lately = self::getAround(30.625761,104.096938,2000);
//            $Condition['m.merchant_lat'] = ['between',"{$Lately['minLat']},{$Lately['maxLat']}"];
//            $Condition['m.merchant_lng'] = ['between',"{$Lately['minLng']},{$Lately['maxLng']}"];

        $PI = 3.14159265;
        $EARTH_RADIUS = 6378137;
        $RAD = $PI / 180.0;

        $Latitude = $Lat;
        $Longitude = $Lon;
        $Degree = (24901 * 1609) / 360.0;
        $RaidusMile = $Raidus;
        $DpmLat = 1 / $Degree;
        $Data = array();
        $RadiusLat = $DpmLat * $RaidusMile;
        $MinLat = $Latitude - $RadiusLat;
        $MaxLat = $Latitude + $RadiusLat;
        $Data["maxLat"] = $MaxLat;
        $Data["minLat"] = $MinLat;
        $MpdLng = $Degree * cos($Latitude * ($PI / 180));
        $DpmLng = 1 / $MpdLng;
        $RadiusLng = $DpmLng * $RaidusMile;
        $MinLng = $Longitude - $RadiusLng;
        $MaxLng = $Longitude + $RadiusLng;
        $Data["maxLng"] = $MinLng;
        $Data["minLng"] = $MaxLng;
        //print_r($data);
        return $Data;
    }


}