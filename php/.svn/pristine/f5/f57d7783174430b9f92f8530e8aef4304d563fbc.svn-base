-- 【已下的已更新】
-- ----------------------------
-- Procedure structure for `TimerTask_usertop300lashmonth`
-- ----------------------------
DROP PROCEDURE IF EXISTS `TimerTask_usertop300lashmonth`;
DELIMITER ;;
CREATE DEFINER=`lewan2018`@`%` PROCEDURE `TimerTask_usertop300lashmonth`(OUT error INT)
BEGIN

    declare userId int default 0;
    declare amount decimal(14,2) default 0;
    #获取要统计的用户id
    DECLARE CONTINUE HANDLER FOR SQLEXCEPTION SET error = 1; # 异常错误
    SET error = 0;

    # 今日tag
    SET @day_tag = FROM_UNIXTIME(UNIX_TIMESTAMP(), '%Y%m%d');
    # 本月tag
    SET @month_tag = FROM_UNIXTIME(UNIX_TIMESTAMP(), '%Y%m');
    # 昨日tag
    SET @yesterday_tag = DATE_FORMAT(DATE_ADD(@day_tag, INTERVAL -1 DAY), '%Y%m%d');
    # 昨日的月份tag
    SET @yesterdaymonth_tag = DATE_FORMAT(DATE_ADD(@day_tag, INTERVAL -1 DAY), '%Y%m');
    # 上月tag
    SET @lastmoth_tag = DATE_FORMAT(DATE_ADD(@day_tag, INTERVAL -1 MONTH), '%Y%m');
    # 执行之前的时间戳
    SET @execStarttime = UNIX_TIMESTAMP();
    # 表名=jay_user300lastmonth

    # 清空上个月的表数据
    TRUNCATE jay_user300lastmonth;

    # 计算上个月300排名
    SET @v_sql = "insert into jay_user300lastmonth(user_id, commission, tag, addtime) select * from (";
    SET @v_sql = CONCAT(@v_sql, " select user_id, sum(finance_xrmd+finance_first+finance_second+finance_operations+finance_operationchilds+finance_playerhost+finance_playerhostzhishu+finance_reward+finance_rewardback) commission, '",@lastmoth_tag,"', UNIX_TIMESTAMP() from jay_account_finance  ");
    SET @v_sql = CONCAT(@v_sql, " where finance_tag=", @lastmoth_tag);
    SET @v_sql = CONCAT(@v_sql, " group by user_id");
    SET @v_sql = CONCAT(@v_sql, " order by commission desc limit 300 ) t;");
    PREPARE statement FROM @v_sql;
    EXECUTE statement;
    DEALLOCATE PREPARE statement;

    #记录执行日志
    set @logId = addTimerlog('TimerTask_usertop300lashmonth', error, @execStarttime);
  END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for `TimerTask_usertop300month`
-- ----------------------------
DROP PROCEDURE IF EXISTS `TimerTask_usertop300month`;
DELIMITER ;;
CREATE DEFINER=`lewan2018`@`%` PROCEDURE `TimerTask_usertop300month`(OUT error INT)
BEGIN

    declare userId int default 0;
    declare amount decimal(14,2) default 0;
    #获取要统计的用户id
    DECLARE CONTINUE HANDLER FOR SQLEXCEPTION SET error = 1; # 异常错误
    SET error = 0;

    # 今日tag
    SET @day_tag = FROM_UNIXTIME(UNIX_TIMESTAMP(), '%Y%m%d');
    # 本月tag
    SET @month_tag = FROM_UNIXTIME(UNIX_TIMESTAMP(), '%Y%m');
    # 昨日tag
    SET @yesterday_tag = DATE_FORMAT(DATE_ADD(@day_tag, INTERVAL -1 DAY), '%Y%m%d');
    # 昨日的月份tag
    SET @yesterdaymonth_tag = DATE_FORMAT(DATE_ADD(@day_tag, INTERVAL -1 DAY), '%Y%m');
    # 上月tag
    SET @lastmoth_tag = DATE_FORMAT(DATE_ADD(@day_tag, INTERVAL -1 MONTH), '%Y%m');
    # 执行之前的时间戳
    SET @execStarttime = UNIX_TIMESTAMP();
    # 表名=jay_user300month

    # 清空上本月的表数据
    TRUNCATE jay_user300month;

    # 计算上本月月300排名
    SET @v_sql = "insert into jay_user300month(user_id, commission, tag, addtime) select * from (";
    SET @v_sql = CONCAT(@v_sql, " select user_id, sum(finance_xrmd+finance_first+finance_second+finance_operations+finance_operationchilds+finance_playerhost+finance_playerhostzhishu+finance_reward+finance_rewardback) commission, '",@month_tag,"', UNIX_TIMESTAMP() from jay_account_finance  ");
    SET @v_sql = CONCAT(@v_sql, " where finance_tag=", @month_tag);
    SET @v_sql = CONCAT(@v_sql, " group by user_id");
    SET @v_sql = CONCAT(@v_sql, " order by commission desc limit 300 ) t;");
    PREPARE statement FROM @v_sql;
    EXECUTE statement;
    DEALLOCATE PREPARE statement;

    #记录执行日志
    set @logId = addTimerlog('TimerTask_usertop300month', error, @execStarttime);
  END
;;
DELIMITER ;




DROP VIEW IF EXISTS `view_orderfinance`;
CREATE ALGORITHM=UNDEFINED DEFINER=`root`@`%` SQL SECURITY DEFINER VIEW `view_orderfinance` AS
select `o`.`order_id` AS `order_id`,`o`.`order_no` AS `order_no`,`o`.`order_transaction` AS `order_transaction`,`o`.`order_fullname` AS `order_fullname`,
`o`.`order_mobile` AS `order_mobile`,`o`.`order_totalfee` AS `order_totalfee`,`o`.`order_isexpress` AS `order_isexpress`,`a`.`cash` AS `cash`,`a`.`coupon` AS `coupon`,
`a`.`payamount` AS `payamount`,`m`.`merchant_name` AS `merchant_name`,`o`.`order_payment` AS `order_payment`,`o`.`order_addtime` AS `order_addtime`,
`o`.`order_paytime` AS `order_paytime`,`p`.`product_id` AS `product_id`,`p`.`product_name` AS `product_name`,`p`.`product_property` AS `product_property`,
`p`.`num` AS `num`,`p`.`price` AS `price`,`p`.`settle` AS `settle`,`p`.`totalmoney` AS `totalmoney`,`p`.`totalsettle` AS `totalsettle`,`p`.`commis_free` AS `commis_free`,
ifnull(`p`.`commis_first`,0) AS `commis_first`,ifnull(`p`.`commis_second`,0) AS `commis_second`,ifnull(`p`.`commis_operations`,0) AS `commis_operations`,
ifnull(`p`.`commis_operations_child`,0) AS `commis_operations_child`,ifnull(`p`.`commis_playerhost_child`,0) AS `commis_playerhost_child`,
ifnull(`p`.`commis_playerhost_zhishu`,0) AS `commis_playerhost_zhishu`,`p1`.`catefinance_id` AS `catefinance_id`,`o`.`order_refundstatus` AS `order_refundstatus`,
`rf`.`refund_uptime` AS `refund_uptime`,`rf`.`refund_type` AS `refund_type`, rr.refund_amount from `jay_order` `o`
left join `jay_order_affiliated` `a` on `a`.`order_id` = `o`.`order_id`
left join `jay_order_product` `p` on `p`.`order_id` = `o`.`order_id`
left join `jay_order_refund` `rf` on `rf`.`order_id` = `o`.`order_id`
left join `jay_order_refund_record` `rr` on `rr`.`order_id` = `o`.`order_id`
left join `jay_product` `p1` on`p1`.`product_id` = `p`.`product_id`
left join `jay_merchant` `m` on`m`.`merchant_id` = `o`.`merchant_id`
where (`o`.`order_status` > 1) order by `o`.`order_id` desc ;





-- 下面的没改没更新。需要增加每个运营达人下面有多少个运营达人--



-- ----------------------------
-- Procedure structure for `lewan_makeuserteamdata`
-- ----------------------------
DROP PROCEDURE IF EXISTS `lewan_makeuserteamdata`;
DELIMITER ;;
CREATE DEFINER=`lewan2018`@`%` PROCEDURE `lewan_makeuserteamdata`(in userLevel int, OUT error INT)
BEGIN

		declare done int default 0;
    declare userId int default 0;
    declare unickname VARCHAR(30) default '';
    declare umobile VARCHAR(20) default '';
    declare utruename VARCHAR(20) default '';
    declare urecount int default 0;
    declare userList cursor for select u.user_id, u.nickname, u.mobile, a.truename, retb.recount from jay_user u
                                left join jay_user_auth a on a.user_id = u.user_id
                                left join (select reid, count(*) recount from jay_user where reid>0 group by reid) retb on retb.reid = u.user_id
																left join jay_account ac on ac.user_id = u.user_id and ac.account_tag=0
                                where u.`level`= userLevel
																group by u.user_id order by ac.account_commission_income desc, retb.recount desc limit 3000;
    declare continue handler for not found set done = 1;
    DECLARE CONTINUE HANDLER FOR SQLEXCEPTION SET error = 1; # 异常错误
    SET error = 0;

    out_label: BEGIN
      OPEN userList;
      repeat
        FETCH userList INTO userId,unickname,umobile,utruename,urecount;
        IF NOT done THEN
           #1.统计团队所有人
           set @teamcount = 0;
           SET @v_sql = CONCAT("select count(*) into @teamcount from jay_user where path like '%,",userId,",%';");
           PREPARE statement FROM @v_sql;
           EXECUTE statement;
           DEALLOCATE PREPARE statement;

           if @teamcount > 0 THEN
               #2.统计团队营业额，销量
               set @totalMoney = 0;
               set @num = 0;
               SET @v_sql = CONCAT("select SUM(o.order_payfee), SUM(p.num) into @totalMoney, @num from jay_order o");
               SET @v_sql = CONCAT(@v_sql, " left join jay_order_product p on p.order_id = o.order_id ");
               SET @v_sql = CONCAT(@v_sql, " where o.order_status>1 and (p.userid_first=",userId," or p.userid_second=",userId," or p.userid_operations=",userId," or p.userid_operations_child=",userId," or p.userid_playerhost_child=",userId,") ");
               PREPARE statement FROM @v_sql;
               EXECUTE statement;
               DEALLOCATE PREPARE statement;

                if @totalMoney > 0 then
                  INSERT IGNORE INTO jay_temp_userdata (`level`, user_id, unickname,umobile,utruename,urecount,teamcount,totalmoney,num,up_time) VALUES (
                    userLevel, userId, unickname, umobile, utruename, urecount, @teamcount, @totalMoney, @num, UNIX_TIMESTAMP()
                  );
                  UPDATE jay_temp_userdata set utruename = utruename,
                                                urecount = urecount,
                                                totalmoney = @totalMoney,
                                                num = @num,
                                                teamcount = @teamcount,
                                                up_time = UNIX_TIMESTAMP()
                                          where `level` = userLevel and user_id = userId;
                end if;
           end if;

        end if;
      until done end repeat;
      close userList;#关闭释放资源
    END out_label;
  END
;;
DELIMITER ;
