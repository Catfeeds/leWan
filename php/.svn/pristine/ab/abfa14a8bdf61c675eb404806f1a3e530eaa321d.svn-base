<?php
/**
 * Created by PhpStorm.
 * User: Admini
 * Date: 2018/11/8
 * Time: 15:15
 * 绑定银行卡
 * 肖亚子
 */

namespace app\api\controller;
use Think\Exception;
use think\Config;
use app\api\model\UserbankModel;
use app\api\model\UserModel;
use app\api\model\UserauthModel;

class UserbankController extends ApiBaseController{

    /**
     * @throws Exception
     * @throws \think\db\exception\DataNotFoundException
     * @throws \think\db\exception\ModelNotFoundException
     * @throws \think\exception\DbException
     * @throws \think\exception\PDOException
     * 获取绑定银行卡列表
     * 肖亚子
     */
    public function UserBankAll(){
        try{
            $Token = input("post.token","","htmlspecialchars,strip_tags");
            $Punfu = new PubfunController();
            $Punfu->UserLoginStatus($Token,$this->headerData);//用户判断
            $Punfu->UserLevelPower($Token);  //权限验证

            $Uid = UserModel::UserFindUid($Token);
            $Condition["ub.user_id"] = array("eq",$Uid);

            $List = UserbankModel::UserBankList($Condition);

            if ($List){
                foreach ($List as $Key => $Val){
                    $List[$Key]["icon"]   = $Val["icon"];
                    $List[$Key]["back"]   = $Val["back"];
                    $List[$Key]["number"] = "**** **** **** ".substr($Val["number"],-4);
                    $List[$Key]["tail"]   = substr($Val["number"],-4);
                }
            }

            $this->returnApiData("获取成功", 200,$List);
        }catch (Exception $e){
            parent::Tpl_Abnormal($e->getMessage());
        }
    }

    /**
     * @throws Exception
     * @throws \think\db\exception\DataNotFoundException
     * @throws \think\db\exception\ModelNotFoundException
     * @throws \think\exception\DbException
     * @throws \think\exception\PDOException
     * 获取平台开放的银行
     * 肖亚子
     */
    public function UserOpenBank(){
        try{
            $Token = input("post.token","","htmlspecialchars,strip_tags");
            $Punfu = new PubfunController();
            $Punfu->UserLoginStatus($Token,$this->headerData);//用户判断
            $Punfu->UserLevelPower($Token);  //权限验证

            $List = UserbankModel::BankList();

            if ($List){
                foreach ($List as $Key => $Val){
                    $List[$Key]["bank_icon"] = $Val["bank_icon"];
                    $List[$Key]["bank_back"] = $Val["bank_back"];
                }
            }

            $this->returnApiData("获取成功", 200,$List);
        }catch (Exception $e){
            parent::Tpl_Abnormal($e->getMessage());
        }
    }

    /**
     * @throws Exception
     * @throws \think\db\exception\DataNotFoundException
     * @throws \think\db\exception\ModelNotFoundException
     * @throws \think\exception\DbException
     * @throws \think\exception\PDOException
     * 用户新增银行卡
     * 肖亚子
     */
    public function UserAppendBank(){
        try{
            $Token          = input("post.token","","htmlspecialchars,strip_tags");
            $BankId         = intval(input("post.bankid"));
            $Reserve_Name   = input("post.reserve_name","","htmlspecialchars,strip_tags");
            $Bank_Number    = input("post.bank_number","","htmlspecialchars,strip_tags");
            $Reserve_Number = input("post.reserve_number","","htmlspecialchars,strip_tags");
            $Bank_Name      = input("post.bank_name","","htmlspecialchars,strip_tags");
            $Province       = intval(input("post.province"));
            $City           = intval(input("post.city"));
            $Area           = intval(input("post.area"));

            $Punfu = new PubfunController();
            $Punfu->UserLoginStatus($Token,$this->headerData);//用户判断
            $Punfu->UserLevelPower($Token);  //权限验证
            $Punfu->UserRealName($Token);  //实名验证

            $Uid        = UserModel::UserFindUid($Token);
            $TrueName   = UserauthModel::UserAuthFind($Uid);
            $Bank       = UserbankModel::BankFind(array("bank_id"=>array("eq",$BankId)));
            $Acc_Number = UserbankModel::UserBankFind(array("account_number"=>array("eq",$Bank_Number)));

            if (!$Bank){
                $this->returnApiData("请选择正确的银行", 400);
            }
            if ($Acc_Number){
                $this->returnApiData("该银行卡已被绑定", 400);
            }

            parent::Tpl_Empty($Reserve_Name,"请输入持卡人姓名",2);
            parent::Tpl_FullSpace($Reserve_Name,"请输入持卡人姓名",2);
            parent::Tpl_StringLength($Reserve_Name,"姓名最少2字最多6字",3,2,6,2);
            parent::Tpl_Contrast($Reserve_Name,$TrueName,"持卡人姓名和实名认证不一致",6,2);
            parent::Tpl_Empty($Bank_Number,"请输入银行卡号",2);
            parent::Tpl_DateCard($Bank_Number,2);
            parent::Tpl_Empty($BankId,"请选择银行",2);
            parent::Tpl_Empty($Province,"请选择开户行城市",2);
            parent::Tpl_Empty($City,"请选择开户行城市",2);
            parent::Tpl_Empty($Area,"请选择开户行城市",2);
            parent::Tpl_Empty($Bank_Name,"请输入开户支行名称",2);
            parent::Tpl_FullSpace($Bank_Name,"请输入开户支行名称",2);
            parent::Tpl_StringLength($Bank_Name,"请输入开户支行名称",3,4,50,2);
            parent::Tpl_Empty($Reserve_Number,"请输入银行卡预留手机号",2);
            parent::Tpl_Phone($Reserve_Number,"请输入正确的手机号",2);

            $UserBank["user_id"]        = $Uid;
            $UserBank["bank_id"]        = $BankId;
            $UserBank["branch_name"]    = $Bank_Name;
            $UserBank["account_number"] = $Bank_Number;
            $UserBank["account_name"]   = $Reserve_Name;
            $UserBank["account_tel"]    = $Reserve_Number;
            $UserBank["province"]       = $Province;
            $UserBank["city"]           = $City;
            $UserBank["area"]           = $Area;

            $Data = UserbankModel::UserBankAdd($UserBank);

            if ($Data){
                $this->returnApiData("银行卡新增成功", 200);
            }else{
                $this->returnApiData("银行卡新增失败", 400);
            }
        }catch (Exception $e){
            parent::Tpl_Abnormal($e->getMessage());
        }
    }


}