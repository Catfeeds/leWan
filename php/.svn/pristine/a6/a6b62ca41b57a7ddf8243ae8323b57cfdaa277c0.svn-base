<?php

namespace app\system\controller;

use app\common\AdminBaseController;
use app\system\model\ActivesModel;
use think\Request;
use think\Db;
use think\Session;
use app\common\RegExpression;
use app\common\Md5Help;
use app\common\SysHelp;
use app\system\model\PaginationModel;
use app\system\model\AdminModel;
use app\system\model\ContentModel;

/**
 * 活动管理
 * Enter description here ...
 * @author Administrator
 *
 */
class ActivesController extends AdminBaseController {

    //大分类id
    private $section = 4;

    /**
     * 活动列表
     * Enter description here ...
     */
    public function index() {
        //设置添加信息按钮
        $this->assign('addbtn', $this->returnAddbtn('添加活动', 'system/actives/add', 2));
        $Psize        = $this->get("page",1);
        $title        = $this->get('title', '');
        $status       = $this->get('status','');
        $provencecode = $this->get("provence_id");
        $citycode     = $this->get("city_id");
        $type         = $this->get('type','');
        $starttime    = $this->get('starttime', '');
        $endtime      = $this->get('endtime', '');

        if ($title) {
            $where["a.title"] = array('like', '%' . $title . '%');
        }
        if($status){
            $where["a.status"] = $status==1?$status:0;
        }
        if ($provencecode) {
            $where[] = array("exp","find_in_set($provencecode,a.provencecode)");
        }
        if ($citycode){
            $where[] = array("exp","find_in_set($citycode,a.citycode)");
        }
        if ($type){
            $where["a.type"] = $type;
        }
        if ($starttime) {
            $where["a.starttime"] = array('egt', strtotime($starttime));
        }
        if ($endtime) {
            $where["a.endtime"] = array('elt', strtotime($endtime));
        }

        $query = array("title"=>$title,"status"=>$status,"provencecode"=>$provencecode,
            "citycode"=>$citycode,"type"=>$type,"starttime"=>$starttime,"endtime"=>$endtime);

        $this->assign("query",$query);
        $this->assign('data', ActivesModel::getActivesList($where,$Psize,20));

        return $this->display('index', true);
    }

    /**
     * 添加操作
     * Enter description here ...
     */
    public function add() {
        if (Request::instance()->isGet()) {
            //类型
            $this->assign('provence', $this->getProvenceList(1));
            return $this->display('edit', true);
        } else {
            $Data = $this->ActivesData();
            $Data["addtime"] = time();

            $res = ActivesModel::getActivesAdd($Data);

            if ($res) {
                $this->log("添加活动");
                $this->toSuccess('添加成功', 'actives/index');
            } else {
                $this->toError('添加失败');
            }
        }
    }

    /**
     * 修改
     * Enter description here ...
     */
    public function edit() {
        $Aid = Request::instance()->param('id', 0);
        if (Request::instance()->isGet()) {

            $Item = ActivesModel::getActivesFind(array("a.a_id"=>$Aid));

            if (!$Item){
                $this->toError('活动不存在');
            }

            $RegionCity = self::City($Item);

            $this->assign('starttime', $item['starttime']?date('Y-m-d H:i:s',$item['starttime']):'');
            $this->assign('endtime', $item['starttime'] ? date('Y-m-d H:i:s',$item['endtime']):'');
            $this->assign("regioncity",$RegionCity);
            $this->assign('obj', $Item);
            $this->assign('provence', $this->getProvenceList(1));
            $this->assign('action', url('system/actives/edit'));
            return $this->display('edit', true);
        } else {
            $Data = $this->ActivesData();
            $Data["uptime"] = time();

            $Condition["a_id"] = $Aid;

            $PreRevision = ActivesModel::getActivesFinds($Condition);
            $Res         = ActivesModel::getActivesUpdate($Condition,$Data);

            if ($Res !== false) {
                $this->log("修改活动信息：[活动ID:".$Aid."]","actives",$Condition,$PreRevision);
                $this->toSuccess('编辑成功', url('actives/index'));
            } else {
                $this->toError('编辑失败');
            }
        }
    }

    /**
     * @throws \think\Exception
     * @throws \think\db\exception\DataNotFoundException
     * @throws \think\db\exception\ModelNotFoundException
     * @throws \think\exception\DbException
     * @throws \think\exception\PDOException
     * 删除活动肖亚子
     */
    public function del() {
        $id = Request::instance()->param('id', 0);
        $idstr = Request::instance()->param('idstr', '');

        if ($id > 0) {
            $obj = Db::name('actives')->where('a_id', $id)->find();
            if(empty($obj)){
                $this->toError('活动不存在');
            }else{
                Db::name('actives')->where("a_id","=",$id)->delete();
                $this->log('删除活动：' . $obj['title']);
            }
        } else {
            //批量删除
            $idarray = explode(',', $idstr);
            foreach ($idarray as $k => $v) {
                if (!(empty($v))) {
                    $obj = Db::name('actives')->where('a_id',"=", $v)->find();
                    Db::name('actives')->delete($v);
                }
            }
            $this->log("批量删除活动:[活动ID:".$idstr."]");
        }

        $this->toSuccess('删除成功');
    }

    /**
     * @return mixed|string
     * 添加修改活动获取数据
     * 肖亚子
     */
    public function ActivesData(){
        $Data = $this->post("actives/a");
        $Data["thumb"] = $this->post("pic");
        $Code          = $this->post("cityids/a");

        if ($Code){
            $Area     = array();
            $Province = array();

            foreach ($Code as $Key => $Val){
                $RegionCode = explode("_",$Val);
                $Province[] = $RegionCode[0];
                $Area[]     = $RegionCode[1];
            }

            $Data["provencecode"] = implode(",",array_unique($Province));
            $Data["citycode"]     = implode(",",$Area);
        }else{
            $Data["provencecode"] = "";
            $Data["citycode"] = "";
        }

        parent::Tpl_Empty($Data["thumb"],"请上传活动图片");
        parent::Tpl_Empty($Data["title"],"请填写活动标题");
        parent::Tpl_FullSpace($Data["title"],"请填写活动标题");
        parent::Tpl_StringLength($Data["title"],"活动标题2-50字",3,2,50);
        parent::Tpl_Positive($Data["sort"],"排序只能是数组字,越小越在前");

        if ($Data["type"] == 4){
            parent::Tpl_Empty($Data["productids"],"请填写商品编号");
            parent::Tpl_FullSpace($Data["productids"],"请填写商品编号");

            parent::Tpl_Empty($Data["rule1"],"请填写任务一标题");
            parent::Tpl_FullSpace($Data["rule1"],"请填写任务一标题");
            parent::Tpl_StringLength($Data["rule1"],"任务一标题2-16字",3,2,16);
            parent::Tpl_Empty($Data["w1"],"请填写任务一描述");
            parent::Tpl_FullSpace($Data["w1"],"请填写任务一描述");
            parent::Tpl_StringLength($Data["w1"],"任务一描述2-16字",3,2,16);
            parent::Tpl_Positive($Data["rwnum1"],"任务一入围最少数只能是数字");

            if ($Data["rule2"] || $Data["w2"] || $Data["rwnum2"]){
                parent::Tpl_Empty($Data["rule2"],"请填写任务二标题");
                parent::Tpl_FullSpace($Data["rule2"],"请填写任务二标题");
                parent::Tpl_StringLength($Data["rule2"],"任务二标题2-16字",3,2,16);
                parent::Tpl_Empty($Data["w2"],"请填写任务二描述");
                parent::Tpl_FullSpace($Data["w2"],"请填写任务二描述");
                parent::Tpl_StringLength($Data["w2"],"任务二描述2-16字",3,2,16);
                parent::Tpl_Positive($Data["rwnum2"],"任务二入围最少数只能是数字");
            }
            if ($Data["rule3"] || $Data["w3"] || $Data["rwnum3"]){
                parent::Tpl_Empty($Data["rule3"],"请填写任务三标题");
                parent::Tpl_FullSpace($Data["rule3"],"请填写任务三标题");
                parent::Tpl_StringLength($Data["rule3"],"任务三标题2-16字",3,2,16);
                parent::Tpl_Empty($Data["w3"],"请填写任务三描述");
                parent::Tpl_FullSpace($Data["w3"],"请填写任务三描述");
                parent::Tpl_StringLength($Data["w3"],"任务三描述2-16字",3,2,16);
                parent::Tpl_Positive($Data["rwnum3"],"任务三入围最少数只能是数字");
            }
        }

        parent::Tpl_Empty($Data["content"],"请填写活动规则");
        parent::Tpl_FullSpace($Data["content"],"请填写活动规则");

        $Data["starttime"] = strtotime($Data["starttime"]);
        $Data["endtime"]   = strtotime($Data["endtime"]);

        return $Data;
    }

    /**
     * @param $Data  转换数据
     * @return array
     * 活动城市组合
     */
    private function City($Data){
        $RegionCity = array();
        if ($Data["city"]){
            $Regionname = explode(",",$Data["regionname"]);
            $province   = explode(",",$Data["province"]);
            $City       = explode(",",$Data["city"]);

            foreach ($City as $Key => $Val){
                $RegionCity[$Key]["id"]    = $Val;
                $RegionCity[$Key]["pcode"] = $province[$Key];
                $RegionCity[$Key]["name"]  = $Regionname[$Key];
            }
        }

        return $RegionCity;
    }
}
