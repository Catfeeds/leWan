<?php
namespace app\system\model;

use think\Db;
use think\Config;
use think\Request;
use think\Session;
use think\Cache;

/**
 * 会员相关
 * Enter description here ...
 * @author Administrator
 *
 */

class UserModel extends BaseModel{

    public static function TableName(){
        return Db::name("user");
    }

    /**
     * @param array $Condition     查询条件
     * @param int $Psize           当前分页数
     * @param int $PageSize        分页条数
     * @return mixed
     * @throws \think\db\exception\DataNotFoundException
     * @throws \think\db\exception\ModelNotFoundException
     * @throws \think\exception\DbException
     * 肖亚子
     * 获取用户
     */
    public function UserList($Condition=array(), $Psize=1, $PageSize=50){
        $Field = "u.user_id,u.recode,u.mobile,u.nickname,u.avatar,u.purchasetag,u.purchasetype,u.level,u.auth,u.freesheet,u.status,u.reg_type,u.reg_time, u.viewtimes_all,r.nickname as rnickname,r.avatar as thumb";
        //查询总记录
        $Count     = self::TableName()
                        ->alias("u")
                        ->field($Field)
                        ->join("user r","r.user_id = u.reid","left")
                        ->where($Condition)
                        ->group("u.user_id")
                        ->order('u.reg_type asc,u.level desc,u.purchasetag asc,u.user_id desc')
                        ->count();

        $PageCount = ceil($Count/$PageSize);

        $List      = self::TableName()
                        ->alias("u")
                        ->field($Field)
                        ->join("user r","r.user_id = u.reid","left")
                        ->where($Condition)
                        ->page($Psize, $PageSize)
                        ->group("u.user_id")
                        ->order("u.reg_type asc,u.level desc,u.purchasetag asc,u.user_id desc")
                        ->select();

        $PaginaTion = parent::Paging($Count,$Psize,$PageCount,$List);

        return $PaginaTion;
    }

    public function UserListExcel($Condition=array()){
        $Field = "u.nickname,u.mobile,u.recode,r.nickname as rnickname,u.reg_type,u.purchasetag,u.purchasetype,u.level,u.auth,u.status,u.reg_time";
        $List  = self::TableName()
                        ->alias("u")
                        ->field($Field)
                        ->Join("user r","r.reid = u.user_id","left")
                        ->where($Condition)
                        ->group("u.user_id")
                        ->order("u.user_id desc")
                        ->select();
        return $List;
    }

    /**
     * @param $Data   添加内容
     * @return int|string
     * 添加用户
     * 肖亚子
     */
    public function UserAdd($Data){
        $UserData = self::TableName()->insertGetId($Data);

        return $UserData;
    }
    /**
     * @param array $Condition    查询条件
     * @return array|false|\PDOStatement|string|\think\Model
     * @throws \think\db\exception\DataNotFoundException
     * @throws \think\db\exception\ModelNotFoundException
     * @throws \think\exception\DbException
     * 获取用户详情
     * 肖亚子
     */
    public function UserFind($Condition = array()){
        $Data = self::TableName()->where($Condition)->find();

        return $Data;
    }

    /**
     * @param $Token  生成的token
     * @return mixed
     * 获取token用户是否存在
     */
    public function UserFindUid($Token){
        $Data = self::TableName()->where("token","=",$Token)->value("user_id");

        return $Data;
    }
    /**
     * @param array $Condition  修改条件
     * @param $Data             修改内容
     * @return int|string
     * @throws \think\Exception
     * @throws \think\exception\PDOException
     * 修改用户信息
     * 肖亚子
     */
    public function UserUpdate($Condition = array(),$Data){
        $Data = self::TableName()->where($Condition)->update($Data);

        return $Data;
    }


    public static function getUserAccountList($condition=array(), $page=1, $pageSize=20){
        $Field = "u.user_id,u.mobile,u.nickname,u.avatar, u.level,a.*";
        $Count = Db::name('account a')
            ->join('user u','u.user_id=a.user_id','left')
            ->where($condition)
            ->count();

        $PageCount = ceil($Count/$pageSize);
        $list = Db::name('account a')
            ->field($Field)
            ->join('user u','u.user_id=a.user_id','left')
            ->where($condition)
            ->page($page, $pageSize)->order('a.account_uptime desc')->select();

        $PaginaTion = parent::Paging($Count,$page,$PageCount,$list);
        return $PaginaTion;

    }


    public function tongjiList($map=array(), $pagenow=1, $pagesize=20){
        //查询总记录
        $count = Db::name('user_tongji')->where($map)->count();

        $list = Db::name('user_tongji')->where($map)
            ->page($pagenow, $pagesize)
            ->order(' tag desc')
            ->select();
        foreach ($list as $k=>$v){
            $list[$k]['tag'] = substr($v['tag'],0,4).'-'.substr($v['tag'],4,2).'-'.substr($v['tag'],6,2);
        }
        $return['list'] = $list;
        //总计
        $viewtimes = Db::name('user')->sum('viewtimes_all');
        if($viewtimes > 10000){
            $viewtimes = (round($viewtimes/100)/100).'万次';
        }elseif($viewtimes > 1000){
            $viewtimes = ($viewtimes/1000).'千次';
        }
        $return['zongji']['viewtimes'] = $viewtimes;
        $return['zongji']['userallcount'] = Db::name('user')->count()-1;
        $return['zongji']['user1count'] = Db::name('user')->where(['level'=>1, 'user_id'=>['gt', 1]])->count();
        $return['zongji']['user2count'] = Db::name('user')->where(['level'=>2, 'user_id'=>['gt', 1]])->count();
        $return['zongji']['user3count'] = Db::name('user')->where(['level'=>3, 'user_id'=>['gt', 1]])->count();
        $return['zongji']['user4count'] = Db::name('user')->where(['level'=>4, 'user_id'=>['gt', 1]])->count();
        $return['zongji']['user5count'] = Db::name('user')->where(['level'=>5, 'user_id'=>['gt', 1]])->count();
        //今日
        $jrtime = strtotime(date('Y-m-d'));
        $viewtimes = Db::name('user')->where(['up_time'=>['gt', $jrtime]])->sum('viewtimes_everyday');
        if($viewtimes > 10000){
            $viewtimes = (round($viewtimes/100)/100).'万次';
        }elseif($viewtimes > 1000){
            $viewtimes = ($viewtimes/1000).'千次';
        }
        $return['jiri']['viewtimes'] = $viewtimes;
        $return['jiri']['userallcount'] = Db::name('user')->count()-1;
        $return['jiri']['user1count'] = Db::name('user')->where(['level'=>1, 'user_id'=>['gt', 1] ,'up_time'=>['gt', $jrtime]])->count();
        $return['jiri']['user2count'] = Db::name('user')->where(['level'=>2, 'user_id'=>['gt', 1] ,'up_time'=>['gt', $jrtime]])->count();
        $return['jiri']['user3count'] = Db::name('user')->where(['level'=>3, 'user_id'=>['gt', 1] ,'up_time'=>['gt', $jrtime]])->count();
        $return['jiri']['user4count'] = Db::name('user')->where(['level'=>4, 'user_id'=>['gt', 1] ,'up_time'=>['gt', $jrtime]])->count();
        $return['jiri']['user5count'] = Db::name('user')->where(['level'=>5, 'user_id'=>['gt', 1] ,'up_time'=>['gt', $jrtime]])->count();

        $pagination = new PaginationModel();
        $return['page'] = $pagination->getPage($count, $pagenow, $pagesize);
        return $return;
    }
}
