<?php
/**
 * Created by PhpStorm.
 * User: Admini
 * Date: 2018/10/30
 * Time: 16:40
 * 接口商品控制器
 * 肖亚子
 */

namespace app\api\controller;
use think\Config;
use Think\Exception;
use think\Url;
use think\Request;
use think\Db;
use app\api\model\ProductModel;
use app\api\model\UserModel;
use app\api\model\CommissionModel;
use app\api\model\OrderModel;

class ProductController extends ApiBaseController{

    /**
     * 获取商品列表
     * 肖亚子
     */
    public function ProductList(){
        try {
            $Condition = array();
            $ProCode   = intval($this->headerData["provincecode"]);//省code
            $CityCode  = intval($this->headerData["citycode"]);//城市code
            $Token     = input("post.token","","htmlspecialchars,strip_tags");
            $Bursting  = intval(input("post.bursting"));//爆款商品
            $Psize     = intval(input("post.paging",1));//分页默认第一页
            $Paged     = intval(input("post.paged",10));//分页条数默认10条
            $Title     = input("post.title","","htmlspecialchars,strip_tags");//搜索条件
            $Cateids   = intval(input("post.cateid"));//商品分类
            $Sales     = intval(input("post.sales"));//销售量 0取消 1降序 2升序
            $Price     = intval(input("post.price"));//价格   0取消 1降序 2升序
            $Distance  = intval(input("post.distance"));//距离 0取消距离 1离我最近
            $Lat       = input("post.lat");//用户纬度
            $Lng       = input("post.lng");//用户经度


            $Punfu = new PubfunController();
            $Punfu->UserLoginStatus($Token,$this->headerData);//用户判断
            $User  = UserModel::UserFinds($Token);
            $Look  = $User["lookover"];

            parent::Tpl_Empty($ProCode,"请选择城市",2);
            parent::Tpl_Empty($CityCode,"请选择城市",2);
            parent::Tpl_Empty($Lat,"请在手机设置里开启位置",2);
            parent::Tpl_Empty($Lng,"请在手机设置里开启位置",2);


            $Condition["p.product_del"]       = array("eq", 0);
          //  $Condition["p.product_toplevel"]  = array("egt", 1);
            $Condition["m.merchant_status"]   = array("eq", 2);
            $Condition["m.merchant_del"]      = array("eq", 0);
            $Condition["r.status"]            = array("eq", 1);

            if (!$Cateids){
                $Condition["p.product_isexpress"] = array("eq", 1);
            }

            if ($Look == 1){
                $Condition["p.product_reviewstatus"] = array("neq", 1);
            }else{
                $Condition["p.product_reviewstatus"] = array("eq", 2);
                $Condition["p.product_status"]       = array("eq", 1);
            }

            if ($Cateids){
                if ($Cateids == 1){
                    $Condition["p.product_returnall"] = array("eq",1);
                }elseif ($Cateids == 4){
                    $Condition[] = array("exp","find_in_set({$Cateids},p.product_cateids) and p.product_returnall = 0");
                    $Condition["p.product_isexpress"]    = array("eq",2);
                    $Condition["p.product_returnall"]    = 0;
                    $Condition["p.product_del"]          = 0;
                }else{
                    $Condition[] = array("exp","find_in_set({$Cateids},p.product_cateids) and p.product_returnall = 0");
                }
            }else{
                $Condition["p.product_returnall"]= array("eq",0);
                $Condition["p.product_cateids"]= array("neq","4");
            }

            if ($Title){
                $Condition["p.product_name"] = array("LIKE", "%$Title%");
            }
            if ($Bursting == 1){
                $Condition["p.product_explosion"] = array("eq", 1);
            }
            $Field = ",ceil(convert((round(6367000 * 2 * asin(sqrt(pow(sin(((m.merchant_lat * pi()) / 180 - ({$Lat} * pi()) / 180) / 2), 2) + cos(({$Lat} * pi()) / 180) * cos((m.merchant_lat * pi()) / 180) * pow(sin(((m.merchant_lng * pi()) / 180 - ({$Lng} * pi()) / 180) / 2), 2)))))/1000,decimal(12,2))) AS distance";

            $Order = "c.sold_out asc";

            if ($Sales) {
                if ($Sales == 1) {
                    $Order .= ",c.product_sold+c.product_sales_volume desc";
                } elseif ($Sales == 2) {
                    $Order .= ",c.product_sold+c.product_sales_volume asc";
                }
            }

            if ($Price) {
                if ($Price == 1) {
                    $Order .= ",c.temp_price desc";
                } elseif ($Price == 2) {
                    $Order .= ",c.temp_price asc";
                }
            }

            if ($Distance){
                 $Order .= ",c.distance asc";
            }

            $Type = self::ProductCondition($Condition,$ProCode,$CityCode,$Cateids);

            $List = ProductModel::NewestShopProductList($Type,$Field,$Order, $Psize,$Paged);

            if (!$List){
                $Type = self::ProductCondition($Condition,510000,510100);

                $List = ProductModel::NewestShopProductList($Type,$Field,$Order, $Psize,$Paged);
            }

            $List = $this->ListConvert($List,$User);

            $this->returnApiData('获取成功', 200, $List);
        }catch (Exception $e) {
            parent::Tpl_Abnormal($e->getMessage());  //数据库异常抛出
        }
    }

    /**
     * @throws \think\db\exception\DataNotFoundException
     * @throws \think\db\exception\ModelNotFoundException
     * @throws \think\exception\DbException
     * 获取首页快递商品版块数据
     * 肖亚子
     */
    public function ProductExpressList(){
        try{
            $Token    = input("post.token","","htmlspecialchars,strip_tags");
            $ProCode  = intval($this->headerData["provincecode"]);//省code
            $CityCode = intval($this->headerData["citycode"]);//城市code

            $Punfu = new PubfunController();
            $Punfu->UserLoginStatus($Token,$this->headerData);//用户判断
            $User  = UserModel::UserFinds($Token);
            $Look  = $User["lookover"];

            if ($Look == 1){
                $Condition["p.product_reviewstatus"] = array("neq", 1);
            }else{
                $Condition["p.product_reviewstatus"] = array("eq", 2);
                $Condition["p.product_status"]       = array("eq", 1);
            }

            $Condition["p.product_isexpress"]    = 2;
            $Condition["p.product_returnall"]    = 0;
            $Condition["p.product_del"]          = 0;
            $Condition["m.merchant_status"]      = 2;
            $Condition["m.merchant_del"]         = 0;
            $Condition["r.status"]               = 1;
            $Condition[] = array("exp","find_in_set(4,p.product_cateids) and p.product_returnall = 0");

            $Order = "c.sold_out asc,c.product_uptime desc";

            $Type = self::ProductCondition($Condition,$ProCode,$CityCode,4);
            $List = ProductModel::NewestShopProductList($Type,"",$Order, 1,6);
            $List = $this->ListConvert($List,$User);

            $this->returnApiData('获取成功', 200, $List);
        }catch (Exception $e) {
            parent::Tpl_Abnormal($e->getMessage());  //数据库异常抛出
        }
    }

    /**
     * 获取商品详情
     * 肖亚子
     */
    public function ProductDetails(){
        try{
            $Data      = array();
            $HotPush   = array();
            $Condition = array();
            $Total       = 0;
            $Total_Sales = 0;

            $Token     = input("post.token","","htmlspecialchars,strip_tags");
            $ProCode   = intval($this->headerData["provincecode"]);//省code
            $CityCode  = intval($this->headerData["citycode"]);//城市code
            $Prid      = intval(input("post.pr_id"));//商品id
            $Lat       = input("post.lat");//用户纬度
            $Lng       = input("post.lng");//用户经度

            $Punfu = new PubfunController();
            $Punfu->UserLoginStatus($Token,$this->headerData);//用户判断
            $Uid   = UserModel::UserFindUid($Token);

            parent::Tpl_Empty($ProCode,"请选择城市",2);
            parent::Tpl_Empty($CityCode,"请选择城市",2);
            parent::Tpl_Empty($Lat,"请开启定位",2);
            parent::Tpl_Empty($Lng,"请开启定位",2);
            parent::Tpl_Empty($Prid,"获取失败",2);

            $Condition["p.product_id"]           = array("eq", $Prid);
            $Condition["p.product_reviewstatus"] = array("eq", 2);
            $Condition["p.product_del"]          = array("eq", 0);
            $Condition["r.status"]               = array("eq", 1);

            $DataFind = ProductModel::ShopProductData($Condition);

            if ($DataFind){

                unset($DataFind["product_cateids"]);

                if($DataFind["product_numlimit"] == 1){
                    $Restrict["op.product_id"] = $Prid;
                    $Restrict["o.user_id"]     = $Uid;
                    $Restrict[]                = array("exp","o.order_status > 1 and o.order_status < 5");

                    $RestrictCount = OrderModel::UserOrderRestrictCount($Restrict);

                    $NumlimitNum = $DataFind["product_numlimit_num"] - $RestrictCount["num"];

                    $DataFind["product_numlimit_num"] = $NumlimitNum < 1?0:$NumlimitNum;
                }

                $ShopCondition[]  = array("exp","(m.merchant_id = {$DataFind["merchant_id"]} or m.parent_id = {$DataFind["merchant_id"]}) and m.merchant_status = 2 and m.merchant_open = 1 and r.status = 1");
                $ShopList         = ProductModel::ShopList($ShopCondition,"m.merchant_alias as merchant_name,m.merchant_400tel,m.merchant_ssq,m.merchant_address,m.merchant_lng,m.merchant_lat");

                if ($DataFind["product_numlimit"] == 1){
                    $Uid = UserModel::UserFindUid($Token);

                    $OrCondition["o.user_id"]    = array("eq",$Uid);
                    $OrCondition[]               = array("exp","o.order_status >= 2 and o.order_status < 5");
                   // $OrCondition["p.product_id"] = array("eq",$Prid);

                    $NumlimitCount = OrderModel::OrderNumlimitCount($OrCondition);

                    $DataFind["numlimitcount"] = $NumlimitCount;
                }else{
                    $DataFind["numlimitcount"] = 0;
                }

                if ($DataFind["product_returnall"] == 1){

                        $Freesheet = UserModel::UserFreesheet($Uid,$Prid);

                        if ($Freesheet){
                            $DataFind["freesheet"] = 2;
                        }else{
                            $DataFind["freesheet"] = 1;
                        }
                }

                if ($DataFind["product_tags"]){
                    $Tags = ProductModel::ShopTags(array("tag_id"=>array("in",$DataFind["product_tags"])));
                    $Tags[]["tag_name"] = ProductModel::ProductGenre($DataFind["product_isexpress"],$DataFind["product_reservation"]);
                    $DataFind["product_tags"] = $Tags;

                }

                if ($DataFind["product_carousel"]){
                    $Carousel = explode(",",$DataFind["product_carousel"]);

                    foreach ($Carousel as $Key => $Val){
                        $Carousel[$Key] = $Val;
                    }
                    $DataFind["product_carousel"] = $Carousel;
                }else{
                    $DataFind["product_carousel"] = array();
                }
                unset($DataFind["merchant_id"]);
                $DataFind["now_time"] = time();
                $DataFind["shop"]     = $ShopList;

                $Data["details"] = $DataFind;
//                $Data["details"] = $DataFind;
//                $Data["details"] = $DataFind;

                $User      = UserModel::UserFinds($Token);
                $Parameter = UserModel::UserParameterList();

                $PriceCondition["product_id"]   = array("eq",$DataFind["product_id"]);
                $PriceCondition["price_status"] = array("eq",1);

                $PriceList = ProductModel::ShopProductPrice($PriceCondition);//获取商品规格

                if ($PriceList){
                    foreach ($PriceList as $Key => $Val){
                        $Total        += $Val["product_totalnum"];
                        $Total_Sales  += ($Val["product_buynum"]+$DataFind["product_sold"]);

                        $Surplus = $Val["product_totalnum"] - ($Val["product_buynum"] + $DataFind["product_sold"]);

                        $PriceList[$Key]["product_totalnum"] = $Surplus >1?$Surplus:0;
                        $PriceList[$Key]["product_buynum"]   = $Val["product_buynum"] + $DataFind["product_sold"];
                    }
                }

                if ($Total <= $Total_Sales){
                    $Data["details"]["sold_out"] = 1;
                }

                if ($Token){
                    $Data["price"] = self::ProduCommission($PriceList,$User["level"],$Parameter);
                }else{
                    $Data["price"] = [];
                }

                $Order  = "c.sold_out asc";
                $Field  = "p.product_id,p.product_pic,p.product_name,p.temp_price,p.temp_commission,p.sold_out,m.merchant_name,r.name as region";
                $Field .= ",ceil(convert((round(6367000 * 2 * asin(sqrt(pow(sin(((m.merchant_lat * pi()) / 180 - ({$Lat} * pi()) / 180) / 2), 2) + cos(({$Lat} * pi()) / 180) * cos((m.merchant_lat * pi()) / 180) * pow(sin(((m.merchant_lng * pi()) / 180 - ({$Lng} * pi()) / 180) / 2), 2)))))/1000,decimal(12,2))) AS distance";

                $PushCondition["p.product_id"]       = array("neq", $Prid);
                $PushCondition["p.product_del"]      = array("eq", 0);
               // $PushCondition["p.product_toplevel"] = array("egt", 1);
                $PushCondition["m.merchant_status"]  = array("eq", 2);
                $PushCondition["m.merchant_del"]     = array("eq", 0);
                $PushCondition["r.status"]           = array("eq", 1);

                if ($User["lookover"] == 1){
                    $PushCondition["p.product_reviewstatus"] = array("neq", 1);
                }else{
                    $PushCondition["p.product_reviewstatus"] = array("eq", 2);
                    $PushCondition["p.product_status"]       = array("eq", 1);
                }

                $Type = self::ProductCondition($PushCondition,$ProCode,$CityCode);
                //获取推荐商品
                $HotPushList = ProductModel::NewestShopProductList($Type,$Field,$Order, 1,8,true);

                if (!$HotPushList){
                    $Type = self::ProductCondition($Condition,510000,510100);

                    $HotPushList = ProductModel::NewestShopProductList($Type,$Field,$Order, 1,8,true);
                }

                foreach ($HotPushList as $Key => $Val){
                    if ($Val["product_pic"]){
                        $HotPushList[$Key]["product_pic"] = $Val["product_pic"];
                    }else{
                        $HotPushList[$Key]["product_pic"] = "";
                    }

                    if ($Token){
                        $HotPushList[$Key]["temp_commission"] = CommissionModel::getRewardByUser($Val["temp_commission"],$User["level"],$Parameter);
                    }else{
                        $HotPushList[$Key]["temp_commission"] = [];
                    }
                }
                $Data["hotpush"]  = $HotPushList;//商品详情追加热推商品
            }else{
                $this->returnApiData('商品已下架', 400);
            }

            $this->returnApiData('获取成功', 200, $Data);
        }catch (Exception $e){
            parent::Tpl_Abnormal($e->getMessage());  //数据库异常抛出
        }

    }

    /**
     * @throws Exception
     * @throws \think\db\exception\DataNotFoundException
     * @throws \think\db\exception\ModelNotFoundException
     * @throws \think\exception\DbException
     * @throws \think\exception\PDOException
     * 用户海报分享商品
     * 肖亚子
     */
    public function ProductShare(){
        try{
            $Token  = input("post.token","","htmlspecialchars,strip_tags");
            $Prid   = intval(input("post.pr_id"));//商品id
            $Url    = input("post.url","","htmlspecialchars,strip_tags");//商品id

            $Punfu = new PubfunController();
            $Punfu->UserLoginStatus($Token,$this->headerData);//用户判断

            parent::Tpl_Empty($Prid,"获取失败",2);
            parent::Tpl_Empty($Url,"获取失败",2);

            $User      = UserModel::UserFinds($Token);
            $Poster    = ProductModel::ShopProductPoster($Prid);

            if ($Poster){
                $Data["url"]    = $Url."?productId={$Prid}&recode={$User['recode']}";
                $Data["poster"] = $Poster;
                $Data["productId"] = $Prid;
                if ($User["recode"]){
                    $Data["Picturename"] = $User["recode"];
                }else{
                    $Data["Picturename"] = $Token;
                }
                $Invitation = generateQrCode($Data,3);//生成分享海报
                $this->returnApiData('获取成功', 200,$Invitation);
            }else{
                $this->returnApiData('获取失败', 400);
            }

        }catch (Exception $e){
            parent::Tpl_Abnormal($e->getMessage());  //数据库异常抛出
        }
    }

    /**
     * @param $List  商品数据
     * @param $User  用户信息
     * @return mixed
     * @throws \think\db\exception\DataNotFoundException
     * @throws \think\db\exception\ModelNotFoundException
     * @throws \think\exception\DbException
     * 商品数据处理
     * 肖亚子
     */
    private function ListConvert($List,$User){

        $Parameter = UserModel::UserParameterList();

        foreach ($List as $Key => $Val) {

            if ($Val["product_pic"]) {
                $List[$Key]["product_pic"] = $Val["product_pic"];
            }

            $Product_Sold = 0;
            $Total        = 0;
            $Total_Sales  = 0;

            if ($User){
                $List[$Key]["temp_commission"] = CommissionModel::getRewardByUser($Val["temp_commission"],$User["level"],$Parameter);
            }else{
                $List[$Key]["temp_commission"] = array();
            }

            $PriceCondition["product_id"]   = $Val["product_id"];
            $PriceCondition["price_status"] = 1;

            $PriceList = ProductModel::ShopProductPrice($PriceCondition);//获取商品规格

            if ($PriceList){
                foreach ($PriceList as $K => $V){
                    if(!empty($V)){
                        $Product_Sold += $Val["product_sold"];
                        $Total        += $V["product_totalnum"];
                        $Total_Sales  += ($V["product_buynum"]+$Val["product_sold"]);
                        if(isset($V["product_totalnum"]) && $V["product_totalnum"]){
                            if(isset($List[$Key]["product_totalnum"])){
                                $List[$Key]["product_totalnum"] += $V["product_totalnum"]?$V["product_totalnum"]:0;
                            }else{
                                $List[$Key]["product_totalnum"] = $V["product_totalnum"]?$V["product_totalnum"]:0;
                            }
                        }

                    }
                }
            }else{
                $List[$Key]["product_totalnum"] = 0;
            }

            if ($Total <= $Total_Sales){
                $List[$Key]["sold_out"] =  1;
            }

            $List[$Key]["product_sold"] = $Product_Sold + $Val["product_sales_volume"];

            $List[$Key]["now_time"] =  time();

            unset($List[$Key]["product_sales_volume"]);
        }

        return $List;
    }

    /**
     * @param $Condition  查询条件
     * @param $ProCode    省code
     * @param $CityCode   市code
     * @return array
     * 商品列表查询条件组合
     * 肖亚子
     */
    private function ProductCondition($Condition,$ProCode,$CityCode,$Cateids = 0){
        $CityCondition         = $Condition;
        $ProvenceCondition     = $Condition;
        $SameCityCondition     = $Condition;
        $SameProvinceCondition = $Condition;
        $Nationwide            = $Condition;
        $NotNationwide         = $Condition;

        if ($Cateids == 4){
            $Express["product_type"] = 2;

            $ExpressList = ProductModel::HomeProductCity($Express);

            if ($ExpressList){
                $Result = [];
                array_map(function ($Value) use (&$Result) {
                    $Result = array_merge($Result, array_values($Value));
                }, $ExpressList);
                $Result = implode(",",$Result);

                $SameCityCondition[""]     = array("exp","p.product_id not in({$Result})");
                $SameProvinceCondition[""] = array("exp","p.product_id not in({$Result})");
                $Nationwide[""]            = array("exp","p.product_id not in({$Result})");
                $NotNationwide[""]         = array("exp","p.product_id not in({$Result})");
            }
        }

        $CityCondition["pc.city_code"]    = array("eq",$CityCode);
        $CityCondition["pc.product_type"] = $Cateids == 4?array("eq",2):array("eq",1);

        $ProvenceCondition["ptp.provence_code"] = array("eq",$ProCode);
        $ProvenceCondition[""] = array("exp","find_in_set({$CityCode},ptp.push_city_codes) = 0");
        $SameCityCondition["m.merchant_ccode"]     = array("eq", $CityCode);
        $SameProvinceCondition["m.merchant_pcode"] = array("eq", $ProCode);
        $SameProvinceCondition["m.merchant_ccode"] = array("neq", $CityCode);
        $Nationwide["n.provence_code"] = array("neq",$ProCode);
        $Nationwide[""] = array("exp","find_in_set({$CityCode},n.push_city_codes) = 0");
        $NotNationwide["m.merchant_pcode"] = array("neq", $ProCode);
        $NotNationwide["m.merchant_ccode"] = array("neq", $CityCode);

        $Type[] = $CityCondition;
        $Type[] = $SameCityCondition;
        $Type[] = $ProvenceCondition;
        $Type[] = $SameProvinceCondition;
        $Type[] = $Nationwide;
        $Type[] = $NotNationwide;

        return $Type;
    }
    /**
     * @param $List      数据列表
     * @param $Level     用户等级
     * @param $Parameter 佣金配置
     * @return mixed
     * 根据用户等级转换商品佣金
     * 肖亚子
     */
    private function ProduCommission($List,$Level,$Parameter){

        foreach ($List as $Key=>$Val){
            $List[$Key]["price_commission"] = CommissionModel::getRewardByUser($Val["price_commission"],$Level,$Parameter);
        }

        return $List;
    }

    /*
 * 计算经纬度范围
 * $lat 纬度
 * $lon 经度
 * $raidus 半径(米)
 */
    /**
     * @param $Lat     用户纬度
     * @param $Lon     用户经度
     * @param $Raidus  用户距离范围
     * @return array
     * 根据用户经纬度以及距离范围计算周边经纬度
     * 肖亚子
     */
    private function getAround($Lat, $Lon, $Raidus) {

        //    $Lately = self::getAround(30.625761,104.096938,2000);
//            $Condition['m.merchant_lat'] = ['between',"{$Lately['minLat']},{$Lately['maxLat']}"];
//            $Condition['m.merchant_lng'] = ['between',"{$Lately['minLng']},{$Lately['maxLng']}"];

        $PI = 3.14159265;
        $EARTH_RADIUS = 6378137;
        $RAD = $PI / 180.0;

        $Latitude = $Lat;
        $Longitude = $Lon;
        $Degree = (24901 * 1609) / 360.0;
        $RaidusMile = $Raidus;
        $DpmLat = 1 / $Degree;
        $Data = array();
        $RadiusLat = $DpmLat * $RaidusMile;
        $MinLat = $Latitude - $RadiusLat;
        $MaxLat = $Latitude + $RadiusLat;
        $Data["maxLat"] = $MaxLat;
        $Data["minLat"] = $MinLat;
        $MpdLng = $Degree * cos($Latitude * ($PI / 180));
        $DpmLng = 1 / $MpdLng;
        $RadiusLng = $DpmLng * $RaidusMile;
        $MinLng = $Longitude - $RadiusLng;
        $MaxLng = $Longitude + $RadiusLng;
        $Data["maxLng"] = $MinLng;
        $Data["minLng"] = $MaxLng;
        //print_r($data);
        return $Data;
    }


}